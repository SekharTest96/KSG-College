package testSuite;

import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.aventstack.extentreports.MediaEntityBuilder;

import constant.Constantss;
import pageLocatorsRepo.OnlinePaymentRepo;
import testReports.KSGExtentReports;
import utilities.DriversInit;


@Listeners(utilities.TestListners.class)

public class OnlinePayementTestss extends KSGExtentReports {
    
    OnlinePaymentRepo pay = new OnlinePaymentRepo(DriversInit.getDriver());
    
    
    @BeforeSuite
    public void beforeTestStarts() {
    	reportConfig1(); 
        test = CreateTest1("Website Launched with given URL"); 
        test.info("Url is - https://www.ksgcollege.com/ ");
    	
    }
    
    @Test(priority=1)
    public void OnlinePaymentTestWithValidInputs() {
        
        reportConfig1(); 
        test = CreateTest1("Submitting online payment form with Valid inputs. "); 
        pay.enterDetailsForOnlinePayment();
        test.pass(" Test Failed . Invalid Inputs accepted.");
    }
  
    
    @Test(priority=2)
    public void emptyInputsTest() {
    	
        DriversInit.driver.get("https://www.ksgcollege.com/");
        pay.emptyInput();
        test = CreateTest1("Submitting online payment form without filling details. ");
        test.fail("empty Inputs accepted. Test with Empty Inputs test is Failed. ");
        
    }

    
    @Test(priority=3)
    public void OnlinePaymentTestwithInvalidInputs() {
    	
        DriversInit.driver.get("https://www.ksgcollege.com/");
        pay.enterDetailsForOnlinePayment1();
      
        test = CreateTest1("Submitting online payment form with invalid details. ").fail("Test Failed . Invalid Inputs accepted.");;
        test.fail(MediaEntityBuilder.createScreenCaptureFromPath(Constantss.screenshotLocationFail).build());
    }

    
    @AfterSuite
    public void closeBrowser() {
    	
        flushTest1();
        DriversInit.quitDriver();
    }
}
